#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys, time  
import argparse       				#arguments parser
import uuid           				#uuid filename format
import urllib,urllib2 				#html requests
from lxml import etree 				#xml parser
import xml.etree.ElementTree as ET 	#xml parser ElemenTree only

__doc__="""
GoXML Wrapper.

@requires: U{python 2.7<https://www.python.org/downloads/>} (tested with 2.7.6)
@requires: U{PyVCF<https://github.com/jamescasbon/PyVCF>}
@requires: U{lxml<https://github.com/lxml/lxml>}
@requires: GOslimmer_xml
@requires: GoXML
"""


def get_parser():
	"""
	Arguments setting and parsing
	@return: arguments list
	@rtype: parser object
	"""

	parser = argparse.ArgumentParser(description=' -d and -g are optional')


	parser.add_argument('-i', action="store", dest='input', 
						type=str, required=True, help='XML path (REQUIRED)')


	parser.add_argument('-obo', action="store", dest='obo', 
						type=str, required=True, help='go-basi.obo path (REQUIRED)')


	parser.add_argument('-o', action="store", dest='output', 
						type=str, required=True, help='output file (REQUIRED)')


	parser.add_argument('-d', action="store", dest='NPdatabases', 
						type=str, required=False, help='NP-EBI_databases.tsv path')


	parser.add_argument('-g', action="store", dest='GOdatabases', 
						type=str, required=False, help='EBI-GO_databases.tsv path')


	parser.add_argument('-p', action="store", dest='GoProkk', 
						type=str, required=True, help='GO_prok.txt path (REQUIRED)')


	parser.add_argument('--withHomoplasy', dest='withHomoplasy', action='store_true', help='keep homoplasy variants', default=False)


	return parser
		

#######################################################################################################################
#MAIN##################################################################################################################
#######################################################################################################################

def main():	


	#################counter initialisation ########################
	t1=time.time()
	##################### get parser ###############################
	parser=get_parser()

	######## Print parser help if arguments missed #################
	if len(sys.argv)==1:
		parser.print_help()
		sys.exit(1)
	########### Manage workflow accorded to Args  ##################
	Arguments=parser.parse_args()

	#################### Create GO-slim file #######################

	inputf = " -i " + str(Arguments.input)
	obo = " -obo " + str(Arguments.obo)
	output = " -o " + str(Arguments.output)
	NParg = " -d " + str(Arguments.NPdatabases)
	GOarg = " -g " + str(Arguments.GOdatabases)
	Goprok = " -p " + str(Arguments.GoProkk)
	if Arguments.withHomoplasy:
		WithH = " --withHomoplasy"
	else:
		WithH = ""

	cmd = "GoXML" + str(inputf) + str(obo) + str(output) + str(NParg) + str(GOarg) + str(Goprok) + str(WithH)
	os.system(cmd)

#############################################################################
#Do not execute the script if it was imported as a module!
if __name__ == "__main__":													
	main()												
#############################################################################