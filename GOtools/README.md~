Title: GOtools README

Author: Kevin Durimel, Arnaud Felten, Nicolas Radomski

Affiliation: [Food Safety Laboratory â€“ ANSES Maisons Alfort (France)](https://www.anses.fr/en/content/laboratory-food-safety-maisons-alfort-and-boulogne-sur-mer)

You can find the latest version of the tool at 
https://github.com/afelten-Anses/XXXXXXXXX

HTML and pdf user technical documentation are available in the 'docs/' directory.


GoXML and EveryGO
=================

Based on accession numbers from the xml file, a driving script called 'GOxML' invokes the scripts 'GOTrimmer_XML' and associate identified variants with corresponding prokaryotic GO-terms.

Using the GO database of the Gene Ontology Consortium (i.e. go-basic.obo file: http://geneontology.org/page/download-ontology), the script 'GOSlimer_XML' aims to generate lists of prokaryote GO-terms.

The script 'GOxML' associates accession identifiers from the xml file with GO-terms available in the QuickGO brother (http://www.ebi.ac.uk/GOA) of the UniProt GO annotation program (https://www.ebi.ac.uk/QuickGO/), then compares these GO-terms to the generated list of prokaryote GO-terms in order to remove Eukaryote GO-terms from the dataset.

In order to centralize the functional annotations of variants (i.e. genotype, effect of homoplasy, NP numbers, gene IDs, gene names, type, position, phenotypical impact) and the GO-terms, the script 'GOxML' integrates also the curated GO-terms (i.e. prokaryote GO-terms) and related biological processes to the common xml file.

Using the number of compared leafs and the xml file, the driving script 'EveryGO' selects non-synonymous variants (SNPs and InDels), and distinguishes between GO-terms from the interest variants (i.e. tested sample) and all variants (i.e. universe) which is used for the hypergeometric test, then invokes 'GOWalker' and 'GOView', successively.

The script 'GOWalker' counts the GO-terms from the sample (i.e. variants from compared leafs) and the universe (i.e. all variants) for each GO-term, as well as the sample (i.e. total GO-terms in the sample) and universe sizes (i.e. total GO-terms in the universe) in order to perform a GO-term enrichment analysis based on the hypergeometric test and the implemented Bonferroni correction.

Using results of hypergeometric tests related to specific compared leafs, the script 'GOView' aims to compute a graphical representation of the GO-term enrichment analysis.


Quick Start
===========

## run it on Linux/Mac OS X system

Simply run the command in the 'src/' directory:

	 ./GoXML
	 ./EveryGO

We recommend to set scripts in your $PATH variable:

	export PATH=$PATH:src/
	export PATH=$PATH:src/otherScripts/


Dependencies
============

GoXML and EveryGO need python 2.7 (tested with 2.7.6), and the following R librarires are require:

* [GGplot2]
* [gridExtra]
* [biocLite.R]


Parameters
===================

##  GoXML parameters

 * '-i': XML path (REQUIRED)
 * '-obo': go-basic.obo path (REQUIRED)
 * '-o': output prefix (REQUIRED)
 * '-d': NP-EBI_databases.tsv path 
 * '-g': EBI-GO_databases.tsv path
 * '--withHomoplasy': keep homoplasy variants

##  EveryGO parameters

 * '-i': VCF file annotated with SNPEff (REQUIRED)
 * '-a': file with names of genomes of interest, one name per line (REQUIRED)
 * '-b': file with names of compared genomes, one name per line (REQUIRED)
 * '-o': output prefix ['output']


Ouputs
======

The sensitive and specific variants are listed in the XML file with the corresponding annotations (genotype, effect of homoplasy, NP numbers, gene IDs, gene names, type, position, phenotypical impact) for each node and all comparisons of leaf lists.

The 'phyloFixedVar' script produces also a newick file similar to the input newick file with node labels (nodes id and combinations id).
 
